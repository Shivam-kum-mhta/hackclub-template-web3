import { useState } from 'react';
import { ConnectButton } from '@rainbow-me/rainbowkit';
import { useContractRead, useContractWrite } from 'wagmi';

const contractAddress = "0x2fD926D5eF17514F8a7F4A7b41fd2904e1d97fA5";
const contractABI = [
  {
    "_format": "hh-sol-artifact-1",
    "contractName": "AgriVerify",
    "sourceName": "contracts/AgriVerify.sol",
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "farmer",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "cropName",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "cropId",
            "type": "uint256"
          }
        ],
        "name": "CropCertified",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "cropIdCounter",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "crops",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "cropId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "certified",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "farmer",
            "type": "address"
          }
        ],
        "name": "getCropInfo",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "cropId",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "certified",
                "type": "bool"
              }
            ],
            "internalType": "struct AgriVerify.Crop[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_cropName",
            "type": "string"
          }
        ],
        "name": "submitCertification",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x60806040526000805534801561001457600080fd5b50610b4a806100246000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806371786e94146100515780639bd9350914610081578063a4a123f11461009d578063df3e7ec8146100d0575b600080fd5b61006b600480360381019061006691906105e0565b6100ee565b6040516100789190610851565b60405180910390f35b61009b60048036038101906100969190610645565b61024d565b005b6100b760048036038101906100b29190610609565b6103e1565b6040516100c794939291906108c0565b60405180910390f35b6100d86104c3565b6040516100e591906108a5565b60405180910390f35b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561024257838290600052602060002090600402016040518060800160405290816000820154815260200160018201805461018c906109fc565b80601f01602080910402602001604051908101604052809291908181526020018280546101b8906109fc565b80156102055780601f106101da57610100808354040283529160200191610205565b820191906000526020600020905b8154815290600101906020018083116101e857829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff1615151515815250508152602001906001019061014f565b505050509050919050565b60008081548092919061025f90610a2e565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280600054815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200142815260200160011515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101908051906020019061035c9291906104c9565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f01f187d409c74f4dc7bfa66cb2402e593ecfa2218cdc955fb5c4ab6bd01cb03083836000546040516103d593929190610873565b60405180910390a25050565b600160205281600052604060002081815481106103fd57600080fd5b906000526020600020906004020160009150915050806000015490806001018054610427906109fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610453906109fc565b80156104a05780601f10610475576101008083540402835291602001916104a0565b820191906000526020600020905b81548152906001019060200180831161048357829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60005481565b8280546104d5906109fc565b90600052602060002090601f0160209004810192826104f7576000855561053e565b82601f1061051057805160ff191683800117855561053e565b8280016001018555821561053e579182015b8281111561053d578251825591602001919060010190610522565b5b50905061054b919061054f565b5090565b5b80821115610568576000816000905550600101610550565b5090565b60008135905061057b81610ae6565b92915050565b60008083601f84011261059357600080fd5b8235905067ffffffffffffffff8111156105ac57600080fd5b6020830191508360018202830111156105c457600080fd5b9250929050565b6000813590506105da81610afd565b92915050565b6000602082840312156105f257600080fd5b60006106008482850161056c565b91505092915050565b6000806040838503121561061c57600080fd5b600061062a8582860161056c565b925050602061063b858286016105cb565b9150509250929050565b6000806020838503121561065857600080fd5b600083013567ffffffffffffffff81111561067257600080fd5b61067e85828601610581565b92509250509250929050565b600061069683836107d0565b905092915050565b60006106a98261091c565b6106b3818561093f565b9350836020820285016106c58561090c565b8060005b8581101561070157848403895281516106e2858261068a565b94506106ed83610932565b925060208a019950506001810190506106c9565b50829750879550505050505092915050565b61071c81610984565b82525050565b61072b81610984565b82525050565b600061073d8385610961565b935061074a8385846109ba565b61075383610ad5565b840190509392505050565b600061076982610927565b6107738185610950565b93506107838185602086016109c9565b61078c81610ad5565b840191505092915050565b60006107a282610927565b6107ac8185610961565b93506107bc8185602086016109c9565b6107c581610ad5565b840191505092915050565b60006080830160008301516107e86000860182610833565b5060208301518482036020860152610800828261075e565b91505060408301516108156040860182610833565b5060608301516108286060860182610713565b508091505092915050565b61083c816109b0565b82525050565b61084b816109b0565b82525050565b6000602082019050818103600083015261086b818461069e565b905092915050565b6000604082019050818103600083015261088e818587610731565b905061089d6020830184610842565b949350505050565b60006020820190506108ba6000830184610842565b92915050565b60006080820190506108d56000830187610842565b81810360208301526108e78186610797565b90506108f66040830185610842565b6109036060830184610722565b95945050505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061097d82610990565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156109e75780820151818401526020810190506109cc565b838111156109f6576000848401525b50505050565b60006002820490506001821680610a1457607f821691505b60208210811415610a2857610a27610aa6565b5b50919050565b6000610a39826109b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6c57610a6b610a77565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610aef81610972565b8114610afa57600080fd5b50565b610b06816109b0565b8114610b1157600080fd5b5056fea26469706673582212200b3cec0b6f9f7475924e7d95038191f6e9589bb0efd86d74e6c44cd77674064b64736f6c63430008000033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806371786e94146100515780639bd9350914610081578063a4a123f11461009d578063df3e7ec8146100d0575b600080fd5b61006b600480360381019061006691906105e0565b6100ee565b6040516100789190610851565b60405180910390f35b61009b60048036038101906100969190610645565b61024d565b005b6100b760048036038101906100b29190610609565b6103e1565b6040516100c794939291906108c0565b60405180910390f35b6100d86104c3565b6040516100e591906108a5565b60405180910390f35b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561024257838290600052602060002090600402016040518060800160405290816000820154815260200160018201805461018c906109fc565b80601f01602080910402602001604051908101604052809291908181526020018280546101b8906109fc565b80156102055780601f106101da57610100808354040283529160200191610205565b820191906000526020600020905b8154815290600101906020018083116101e857829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff1615151515815250508152602001906001019061014f565b505050509050919050565b60008081548092919061025f90610a2e565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280600054815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200142815260200160011515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101908051906020019061035c9291906104c9565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f01f187d409c74f4dc7bfa66cb2402e593ecfa2218cdc955fb5c4ab6bd01cb03083836000546040516103d593929190610873565b60405180910390a25050565b600160205281600052604060002081815481106103fd57600080fd5b906000526020600020906004020160009150915050806000015490806001018054610427906109fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610453906109fc565b80156104a05780601f10610475576101008083540402835291602001916104a0565b820191906000526020600020905b81548152906001019060200180831161048357829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60005481565b8280546104d5906109fc565b90600052602060002090601f0160209004810192826104f7576000855561053e565b82601f1061051057805160ff191683800117855561053e565b8280016001018555821561053e579182015b8281111561053d578251825591602001919060010190610522565b5b50905061054b919061054f565b5090565b5b80821115610568576000816000905550600101610550565b5090565b60008135905061057b81610ae6565b92915050565b60008083601f84011261059357600080fd5b8235905067ffffffffffffffff8111156105ac57600080fd5b6020830191508360018202830111156105c457600080fd5b9250929050565b6000813590506105da81610afd565b92915050565b6000602082840312156105f257600080fd5b60006106008482850161056c565b91505092915050565b6000806040838503121561061c57600080fd5b600061062a8582860161056c565b925050602061063b858286016105cb565b9150509250929050565b6000806020838503121561065857600080fd5b600083013567ffffffffffffffff81111561067257600080fd5b61067e85828601610581565b92509250509250929050565b600061069683836107d0565b905092915050565b60006106a98261091c565b6106b3818561093f565b9350836020820285016106c58561090c565b8060005b8581101561070157848403895281516106e2858261068a565b94506106ed83610932565b925060208a019950506001810190506106c9565b50829750879550505050505092915050565b61071c81610984565b82525050565b61072b81610984565b82525050565b600061073d8385610961565b935061074a8385846109ba565b61075383610ad5565b840190509392505050565b600061076982610927565b6107738185610950565b93506107838185602086016109c9565b61078c81610ad5565b840191505092915050565b60006107a282610927565b6107ac8185610961565b93506107bc8185602086016109c9565b6107c581610ad5565b840191505092915050565b60006080830160008301516107e86000860182610833565b5060208301518482036020860152610800828261075e565b91505060408301516108156040860182610833565b5060608301516108286060860182610713565b508091505092915050565b61083c816109b0565b82525050565b61084b816109b0565b82525050565b6000602082019050818103600083015261086b818461069e565b905092915050565b6000604082019050818103600083015261088e818587610731565b905061089d6020830184610842565b949350505050565b60006020820190506108ba6000830184610842565b92915050565b60006080820190506108d56000830187610842565b81810360208301526108e78186610797565b90506108f66040830185610842565b6109036060830184610722565b95945050505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061097d82610990565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156109e75780820151818401526020810190506109cc565b838111156109f6576000848401525b50505050565b60006002820490506001821680610a1457607f821691505b60208210811415610a2857610a27610aa6565b5b50919050565b6000610a39826109b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6c57610a6b610a77565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610aef81610972565b8114610afa57600080fd5b50565b610b06816109b0565b8114610b1157600080fd5b5056fea26469706673582212200b3cec0b6f9f7475924e7d95038191f6e9589bb0efd86d74e6c44cd77674064b64736f6c63430008000033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
];

function App() {
  const { data: message, refetch } = useContractRead({
    address: contractAddress,
    abi: contractABI,
    functionName: 'message',
  });

  const { write: updateMessage } = useContractWrite({
    address: contractAddress,
    abi: contractABI,
    functionName: 'updateMessage',
  });

  const [newMessage, setNewMessage] = useState('');

  return (
    <div className="container">
      <ConnectButton />
      <h1>Web3 Hackathon Starter</h1>
      <p>Current Message: {message}</p>
      <input 
        type="text" 
        value={newMessage} 
        onChange={(e) => setNewMessage(e.target.value)} 
      />
      <button onClick={() => updateMessage({ args: [newMessage] })}>
        Update Message
      </button>
    </div>
  );
}

export default App;
